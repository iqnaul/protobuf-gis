// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gis/protobuf/linestring.proto

/*
Package gis_protobuf is a generated protocol buffer package.

It is generated from these files:
	gis/protobuf/linestring.proto
	gis/protobuf/point.proto
	gis/protobuf/polygon.proto

It has these top-level messages:
	LineString2D
	LineString3D
	MultiLineString2D
	MultiLineString3D
	Point2D
	Point3D
	MultiPoint2D
	MultiPoint3D
	Polygon2D
	Polygon3D
	MultiPolygon2D
	MultiPolygon3D
*/
package gis_protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// type: LineString
// coordinates: [[x, y], [x, y]]
type LineString2D struct {
	Point []*Point2D `protobuf:"bytes,1,rep,name=point" json:"point,omitempty"`
}

func (m *LineString2D) Reset()                    { *m = LineString2D{} }
func (m *LineString2D) String() string            { return proto.CompactTextString(m) }
func (*LineString2D) ProtoMessage()               {}
func (*LineString2D) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LineString2D) GetPoint() []*Point2D {
	if m != nil {
		return m.Point
	}
	return nil
}

// type: LineString
// coordinates: [[x, y, z], [x, y, z]]
type LineString3D struct {
	Point []*Point3D `protobuf:"bytes,1,rep,name=point" json:"point,omitempty"`
}

func (m *LineString3D) Reset()                    { *m = LineString3D{} }
func (m *LineString3D) String() string            { return proto.CompactTextString(m) }
func (*LineString3D) ProtoMessage()               {}
func (*LineString3D) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LineString3D) GetPoint() []*Point3D {
	if m != nil {
		return m.Point
	}
	return nil
}

// type: MultiLineString
// coordinates: [[[x, y], [x, y]], [[x, y], [x, y]]]
type MultiLineString2D struct {
	LineString []*LineString2D `protobuf:"bytes,1,rep,name=line_string,json=lineString" json:"line_string,omitempty"`
}

func (m *MultiLineString2D) Reset()                    { *m = MultiLineString2D{} }
func (m *MultiLineString2D) String() string            { return proto.CompactTextString(m) }
func (*MultiLineString2D) ProtoMessage()               {}
func (*MultiLineString2D) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MultiLineString2D) GetLineString() []*LineString2D {
	if m != nil {
		return m.LineString
	}
	return nil
}

// type: MultiLineString
// coordinates: [[[x, y, z], [x, y, z]], [[x, y, z], [x, y, z]]]
type MultiLineString3D struct {
	LineString []*LineString3D `protobuf:"bytes,1,rep,name=line_string,json=lineString" json:"line_string,omitempty"`
}

func (m *MultiLineString3D) Reset()                    { *m = MultiLineString3D{} }
func (m *MultiLineString3D) String() string            { return proto.CompactTextString(m) }
func (*MultiLineString3D) ProtoMessage()               {}
func (*MultiLineString3D) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *MultiLineString3D) GetLineString() []*LineString3D {
	if m != nil {
		return m.LineString
	}
	return nil
}

func init() {
	proto.RegisterType((*LineString2D)(nil), "gis.protobuf.LineString2D")
	proto.RegisterType((*LineString3D)(nil), "gis.protobuf.LineString3D")
	proto.RegisterType((*MultiLineString2D)(nil), "gis.protobuf.MultiLineString2D")
	proto.RegisterType((*MultiLineString3D)(nil), "gis.protobuf.MultiLineString3D")
}

func init() { proto.RegisterFile("gis/protobuf/linestring.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 172 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4d, 0xcf, 0x2c, 0xd6,
	0x2f, 0x28, 0xca, 0x2f, 0xc9, 0x4f, 0x2a, 0x4d, 0xd3, 0xcf, 0xc9, 0xcc, 0x4b, 0x2d, 0x2e, 0x29,
	0xca, 0xcc, 0x4b, 0xd7, 0x03, 0x8b, 0x09, 0xf1, 0xa4, 0x67, 0x16, 0xeb, 0xc1, 0xa4, 0xa5, 0x24,
	0x50, 0x14, 0x17, 0xe4, 0x67, 0xe6, 0x95, 0x40, 0x24, 0x95, 0xac, 0xb9, 0x78, 0x7c, 0x32, 0xf3,
	0x52, 0x83, 0xc1, 0x7a, 0x8d, 0x5c, 0x84, 0xb4, 0xb9, 0x58, 0xc1, 0xd2, 0x12, 0x8c, 0x0a, 0xcc,
	0x1a, 0xdc, 0x46, 0xa2, 0x7a, 0xc8, 0xe6, 0xe8, 0x05, 0x80, 0xa4, 0x8c, 0x5c, 0x82, 0x20, 0x6a,
	0x50, 0x35, 0x1b, 0x13, 0xa5, 0xd9, 0x18, 0xae, 0x39, 0x80, 0x4b, 0xd0, 0xb7, 0x34, 0xa7, 0x24,
	0x13, 0xc5, 0x7a, 0x6b, 0x2e, 0x6e, 0x90, 0x57, 0xe2, 0x21, 0x7e, 0x81, 0x9a, 0x23, 0x85, 0x6a,
	0x0e, 0xb2, 0x86, 0x20, 0xae, 0x1c, 0x38, 0x0f, 0x8b, 0x89, 0xc6, 0xa4, 0x9a, 0x68, 0x8c, 0x62,
	0xa2, 0x13, 0x5f, 0x14, 0x28, 0x1c, 0xe3, 0x61, 0x0a, 0x93, 0xd8, 0xc0, 0x2c, 0x63, 0x40, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xe5, 0x77, 0xd9, 0x29, 0x7d, 0x01, 0x00, 0x00,
}
